plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'me.danielmillar'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "Skript"
        url = "https://repo.skriptlang.org/releases"
    }
    maven {
        name = "IS-Snapshots"
        url = "https://repo.infernalsuite.com/repository/maven-snapshots/"
    }
    maven {
        name = "Rapture"
        url = "https://repo.rapture.pw/repository/maven-releases/"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compileOnly "com.github.SkriptLang:Skript:2.9.0"
    compileOnly "com.infernalsuite.aswm:api:3.0.0-SNAPSHOT"
    implementation "com.infernalsuite.aswm:loaders:3.0.0-SNAPSHOT"
    implementation("de.exlll:configlib-yaml:4.5.0")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
    from ('lang') {
        include '**/*'
        into 'lang/'
    }
}

kotlin {
    jvmToolchain(21)
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
